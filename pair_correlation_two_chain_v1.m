% This script computes and plots the pair correlation function for one
% chain versus another at the specified timestep. The two chains are also
% plotted in 3D. The first chain is the 'reference chain' and is plotted
% once, the second is repeated periodically. The pair correlation is only
% computed within a specified radius for each of the monomers making up the
% reference chain.
%%% Noah Paulson, 9/30/2014

if exist('timestep') == 0
    load total_info_11.mat
end

close all

color = hsv(20);

step = 1; % ID of timestep

ch1 = 7; % ID of first chain
ch2 = 8; % ID of second chain


chain1 = (locations(:,2,step) == ch1);
x_chain1 = chain1 .* locations(:,4,step);
y_chain1 = chain1 .* locations(:,5,step);
z_chain1 = chain1 .* locations(:,6,step);
x_chain1(x_chain1==0) = [];
y_chain1(y_chain1==0) = [];
z_chain1(z_chain1==0) = [];

chains_int = [x_chain1, y_chain1, z_chain1];
ch_len = length(chains_int(:));

chain2 = (locations(:,2,step) == ch2);
x_chain2 = chain2 .* locations(:,4,step);
y_chain2 = chain2 .* locations(:,5,step);
z_chain2 = chain2 .* locations(:,6,step);
x_chain2(x_chain2==0) = [];
y_chain2(y_chain2==0) = [];
z_chain2(z_chain2==0) = [];

chains_per = [];

% the following code generates a specified tiling of simulation
% volumes (according to the periodic boundary conditions)
for xx = [0,1]        
    for yy = [0,1]
        for zz = [-1,0,1]
            
            if xx == 0 && yy == 0 && zz == 0 
            
            else
                
                x_chain_per = x_chain2 + xx*2*bounds(1,2,step)*ones(size(x_chain2));
                y_chain_per = y_chain2 + yy*2*bounds(2,2,step)*ones(size(y_chain2));
                z_chain_per = z_chain2 + zz*2*bounds(3,2,step)*ones(size(z_chain2));

                chains_spec = [x_chain_per,y_chain_per,z_chain_per];    
                chains_per = [chains_per ; chains_spec];
            
            end
        end
    end
end

% dist: vector of the distances between all monomers

range = 20;
[idx, dist] = rangesearch(chains_per,chains_int,range);

dist_l = [];
for rr = 1:length(dist)
    dist_l = [dist_l , cell2mat(dist(rr))];
end
dist_l = dist_l';
dist_l(dist_l == 0) = [];

intv = 1; % the interval in the binranges

% binranges: vector of the starts/ends of the histogram bins
binranges = 0 : intv : range;

% bincenters: central radius value in each histogram bin
bincenters = binranges(1:end) + 0.5 * intv;

% bincounts: number of monomer distances per each bin
bincounts = histc(dist_l,binranges)';

%NOTE: vol, atom_density, normalization_vec, point_density all relate
% to the creation of a normalization factor for each bin which represents
% the volume of the shell bounded by binranges(ii) and binranges(ii+1)
% (which are essentially radii)

% vol: the simulation volume
vol = 8 * bounds(1,2,step) * bounds(2,2,step) * bounds(3,2,step);

% atom_density: total # atoms divided by the simulation volume
atom_density = ch_len / vol;

% vector of the volumes of the shells generated by the inner and outer
% radii of the histogram bins
normalization_vec = (4 * pi() * atom_density * intv) .* (bincenters.^2);

% point density: density of monomer distances for a given radius (vector)
point_density = bincounts ./ normalization_vec;

% bar plot of the pair correlation function
figure(1)

%     bar(binranges,bincounts/ch_len,'histc')
bar(binranges,point_density,'histc')

title1 = ['Pair correlation function for chain ', int2str(ch1) ,' versus chain ', int2str(ch2), ', Timestep = ', num2str(timestep(step))];
title(title1)
xlabel distance
ylabel frequency
set(gca,'XMinorTick','on')
axis([0 range 0 (max(point_density)+10)])

% 3d plot of the specific chain of interest
figure(2)

clf

H = plot3(chains_int(:,1), chains_int(:,2), chains_int(:,3));
set(H,'LineStyle','none','Marker','o','MarkerEdgeColor','k','MarkerFaceColor',color(19,:),'MarkerSize',5)
hold on
J = plot3(chains_per(:,1), chains_per(:,2), chains_per(:,3));
set(J,'LineStyle','none','Marker','o','MarkerEdgeColor','k','MarkerFaceColor',color(8,:),'MarkerSize',5)
hold off

axis tight equal
grid on;    
title2 = ['Plot of chain ', int2str(ch1) ,' versus chain ', int2str(ch2), ', Timestep = ', num2str(timestep(step))];
title(title2);



